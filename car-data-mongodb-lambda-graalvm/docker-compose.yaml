version: '3.8'
services:
  mongodb:
    image: mongo:5.0.10
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: test
    command: "mongod --replSet rs0 --bind_ip_all"
    healthcheck:
      test: mongo --eval "rs.initiate()" && mongo --eval 'db.createUser({user:"user",pwd:"user",roles:["readWrite"]})'
      start_period: 5s
      interval: 10s
#  native-agent-run:
#    volumes:
#      - ./data-mongodb-lambda-graalvm/build/libs/:/home/app/libs/
#      - ./data-mongodb-lambda-graalvm/src/main/resources/META-INF/native-image/:/home/app/agent-output/
#    build:
#      context: .
#      dockerfile: ./data-mongodb-lambda-graalvm/build/docker/native-main/DockerfileNative
#      target: graalvm
#    command: bash -c "java -agentlib:native-image-agent=config-output-dir=/home/app/agent-output,experimental-class-define-support -cp $$(find . -name '*-all.jar') com.LocalRunner"
#    env_file:
#      - .env
  native-agent-test:
    environment:
      TESTCONTAINERS_RYUK_DISABLED: "true"
    volumes:
      - ./src/main/resources/META-INF/native-image/:/home/app/agent-output/
      - ~/.gradle/wrapper:/root/.gradle/wrapper
      - ~/.m2:/root/.m2
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: "host"
    build:
      context: ./..
      dockerfile: ./car-data-mongodb-lambda-graalvm/scripts/DockerfileNativeAgentTest
    entrypoint: bash -c "./gradlew car-data-mongodb-lambda-graalvm:clean -Pagent --info car-data-mongodb-lambda-graalvm:test && cp -rf /var/task/car-data-mongodb-lambda-graalvm/build/native/agent-output/test/* /home/app/agent-output"
  native-test:
    environment:
      TESTCONTAINERS_RYUK_DISABLED: "true"
    image: mvppl123/graalvm:java17-0.0.1
    network_mode: "host"
    working_dir: /home
    volumes:
      - ../:/home
      - ~/.gradle/wrapper:/root/.gradle/wrapper
      - ~/.m2:/root/.m2
      - /var/run/docker.sock:/var/run/docker.sock
    command: bash -c "./gradlew car-data-mongodb-lambda-graalvm:clean car-data-mongodb-lambda-graalvm:nativeTest"
  local-run:
    environment:
      MONGO_HOST: host.docker.internal
    image: car-data-mongodb-lambda-graalvm:latest
    ports:
      - "9001:8080"
    volumes:
      - ./aws-lambda-rie:/aws-lambda-rie
    entrypoint: bash -c "cp -R /function /var/task && /aws-lambda-rie"