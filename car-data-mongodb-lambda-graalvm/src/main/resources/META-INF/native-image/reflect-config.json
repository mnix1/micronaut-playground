[
    {
        "name": "[B"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.Bind;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.Capability;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.ContainerPort;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.Device;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.ExposedPort;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.Link;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.LxcConf;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.PortBinding;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.Ports$Binding;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.Ulimit;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.Volume;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.VolumeBind;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.VolumeRW;"
    },
    {
        "name": "[Lcom.github.dockerjava.api.model.VolumesFrom;"
    },
    {
        "name": "[Lio.micronaut.aop.Interceptor;"
    },
    {
        "name": "[Ljava.lang.Object;"
    },
    {
        "name": "[Ljava.lang.String;"
    },
    {
        "name": "[Lorg.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
        "name": "[Lorg.testcontainers.shaded.com.google.common.collect.ImmutableMapEntry;"
    },
    {
        "allDeclaredClasses": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "apiWorks",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "beforeAll",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "stopServer",
                "parameterTypes": [
                    
                ]
            }
        ],
        "name": "com.example.car.IntegrationTest",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.example.car.api.CarProducer",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.example.car.api.CarSnapshot",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "com.example.car.api.CarProducer",
                    "int"
                ]
            }
        ]
    },
    {
        "name": "com.example.car.api.command.CreateCarCommand",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.example.car.component.$CarRecord$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.example.car.component.$CarRepository$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.example.car.component.$DefaultCarFacade$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.example.car.component.http.$CarController$ChangeCarOwnerRequestBody$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.example.car.component.http.$CarController$CreateCarRequestBody$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.example.car.component.http.$CarController$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.example.car.component.http.CarController$ChangeCarOwnerRequestBody",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.example.car.component.http.CarController$CreateCarRequestBody",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.AsyncDockerCmd",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.github.dockerjava.api.command.CreateContainerCmd",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.github.dockerjava.api.command.CreateContainerResponse",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "setId",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "setWarnings",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.DockerCmd",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.github.dockerjava.api.command.ExecCreateCmd",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.github.dockerjava.api.command.ExecCreateCmdResponse",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.ExecStartCmd",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.github.dockerjava.api.command.GraphData",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.GraphDriver",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.HealthState",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.command.HealthStateLog",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.command.InspectContainerResponse",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "queryAllPublicConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "com.github.dockerjava.api.command.InspectContainerResponse"
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.InspectContainerResponse$Mount",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.InspectContainerResponse$Node",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.command.InspectExecResponse",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.InspectExecResponse$Container",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "queryAllPublicConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "com.github.dockerjava.api.command.InspectExecResponse"
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.command.SyncDockerCmd",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.github.dockerjava.api.model.AccessMode",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.Bind",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.BindOptions",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.BindPropagation",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.Binds",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "fromPrimitive",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "toPrimitive",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.BlkioRateDevice",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.BlkioWeightDevice",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Capability",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.ClusterInfo",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Container",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ContainerConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.ContainerHostConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ContainerMount",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ContainerNetwork",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.ContainerNetwork$Ipam",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ContainerNetworkSettings",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ContainerPort",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Device",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.DeviceRequest",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.DockerObject",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "getRawValues",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Driver",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ExposedPort",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ExposedPorts",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "fromPrimitive",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "toPrimitive",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.ExternalCA",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.ExternalCAProtocol",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.HealthCheck",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.HostConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getAutoRemove",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getBlkioDeviceReadBps",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getBlkioDeviceReadIOps",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getBlkioDeviceWriteBps",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getBlkioDeviceWriteIOps",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getBlkioWeight",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getBlkioWeightDevice",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCapAdd",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCapDrop",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCgroup",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCgroupParent",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCgroupnsMode",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getConsoleSize",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getContainerIDFile",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpuCount",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpuPercent",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpuPeriod",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpuQuota",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpuRealtimePeriod",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpuRealtimeRuntime",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpuShares",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpusetCpus",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getCpusetMems",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDeviceCgroupRules",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDeviceRequests",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDevices",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDiskQuota",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDns",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDnsOptions",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDnsSearch",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getExtraHosts",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getGroupAdd",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getInit",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getIoMaximumBandwidth",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getIoMaximumIOps",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getIpcMode",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getIsolation",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getKernelMemory",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getLxcConf",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getMemory",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getMemoryReservation",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getMemorySwap",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getMemorySwappiness",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getMounts",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getNanoCPUs",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getNetworkMode",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getOomKillDisable",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getOomScoreAdj",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPidMode",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPidsLimit",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPortBindings",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPrivileged",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPublishAllPorts",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getReadonlyRootfs",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getRestartPolicy",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getRuntime",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getSecurityOpts",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getShmSize",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getStorageOpt",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getSysctls",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getTmpFs",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getUlimits",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getUsernsMode",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getUtSMode",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getVolumeDriver",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getVolumesFrom",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Image",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Info",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.InfoRegistryConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.InternetProtocol",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.Isolation",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "fromValue",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Link",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Links",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "toPrimitive",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.LocalNodeState",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "forValue",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.LogConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "setType",
                "parameterTypes": [
                    "com.github.dockerjava.api.model.LogConfig$LoggingType"
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.LogConfig$LoggingType",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "fromValue",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.LxcConf",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Mount",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.MountType",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.Network",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Network$ContainerNetworkConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Network$Ipam",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Network$Ipam$Config",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.NetworkSettings",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.PeerNode",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Ports",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "fromPrimitive",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "toPrimitive",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Ports$Binding",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.PropagationMode",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.PruneResponse",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.ResourceVersion",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.RestartPolicy",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.SELContext",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "com.github.dockerjava.api.model.SwarmCAConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.SwarmDispatcherConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.SwarmInfo",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.SwarmOrchestration",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.SwarmRaftConfig",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.SwarmSpec",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.TaskDefaults",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.TmpfsOptions",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Ulimit",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Version",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.VersionComponent",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.VersionPlatform",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.Volume",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.VolumeBind",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.VolumeBinds",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.VolumeOptions",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.VolumeRW",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.Volumes",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "toPrimitive",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.github.dockerjava.api.model.VolumesFrom",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.github.dockerjava.api.model.VolumesRW",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "com.mongodb.WriteConcern",
        "allPublicFields": true
    },
    {
        "name": "com.sun.jna.CallbackProxy",
        "queriedMethods": [
            {
                "name": "callback",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aop.internal.InterceptorRegistryBean",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.$AWSConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.$CredentialsAndRegionFactory$AwsCredentialsProvider0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.$CredentialsAndRegionFactory$AwsRegionProvider1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.$CredentialsAndRegionFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.apache.$ApacheClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.apache.$ApacheClientFactory$ApacheClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.apache.$ApacheClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.apache.$ApacheClientFactory$SystemPropertyClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.apache.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.netty.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.netty.$NettyClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.netty.$NettyClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.netty.$NettyClientFactory$NettyClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.netty.$NettyClientFactory$SystemPropertyClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.urlConnection.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.urlConnection.$UrlConnectionClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.urlConnection.$UrlConnectionClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.urlConnection.$UrlConnectionClientFactory$SystemPropertyClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.client.urlConnection.$UrlConnectionClientFactory$UrlConnectionClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.dynamodb.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.dynamodb.$DynamoDbClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.dynamodb.$DynamoDbClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.dynamodb.$DynamoDbClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.dynamodb.$DynamoDbClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.dynamodb.$DynamoDbClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.gatewaymanagement.$ApiGatewayManagementApiClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.gatewaymanagement.$ApiGatewayManagementApiClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.gatewaymanagement.$ApiGatewayManagementApiClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.gatewaymanagement.$ApiGatewayManagementApiClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.gatewaymanagement.$ApiGatewayManagementApiClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.gatewaymanagement.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.s3.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.s3.$S3ClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.s3.$S3ClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.s3.$S3ClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.s3.$S3ClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.s3.$S3ClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.s3.$S3ConfigurationProperties$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.secretsmanager.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.secretsmanager.$SecretsManagerClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.secretsmanager.$SecretsManagerClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.secretsmanager.$SecretsManagerClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.secretsmanager.$SecretsManagerClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.secretsmanager.$SecretsManagerClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.servicediscovery.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.servicediscovery.$ServiceDiscoveryAsyncClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.servicediscovery.$ServiceDiscoveryAsyncClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.servicediscovery.$ServiceDiscoveryAsyncClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.servicediscovery.$ServiceDiscoveryAsyncClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.servicediscovery.$ServiceDiscoveryAsyncClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ses.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ses.$SesClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ses.$SesClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ses.$SesClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ses.$SesClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ses.$SesClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sns.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sns.$SnsClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sns.$SnsClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sns.$SnsClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sns.$SnsClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sns.$SnsClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sqs.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sqs.$SqsClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sqs.$SqsClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sqs.$SqsClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sqs.$SqsClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.sqs.$SqsClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ssm.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ssm.$SsmClientFactory$AsyncBuilder2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ssm.$SsmClientFactory$AsyncClient3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ssm.$SsmClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ssm.$SsmClientFactory$SyncBuilder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.aws.sdk.v2.service.ssm.$SsmClientFactory$SyncClient1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.core.$DefaultCodecRegistryBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.core.$DefaultMongoClientSettingsFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.core.$DefaultMongoClientSettingsFactory$MongoClientSettings0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.core.$DefaultMongoConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.core.$NamedMongoConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.core.convert.$MongoConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.core.test.$MongoProcessFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.$DefaultReactiveMongoClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.$DefaultReactiveMongoClientFactory$MongoClient0$Definition$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.$DefaultReactiveMongoClientFactory$MongoClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.$NamedReactiveMongoClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.$NamedReactiveMongoClientFactory$MongoClient0$Definition$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.$NamedReactiveMongoClientFactory$MongoClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.reactive.health.$MongoHealthIndicator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.sync.$DefaultMongoClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.sync.$DefaultMongoClientFactory$MongoClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.sync.$NamedMongoClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.sync.$NamedMongoClientFactory$MongoClient0$Definition$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.configuration.mongo.sync.$NamedMongoClientFactory$MongoClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.annotation.Prototype"
    },
    {
        "name": "io.micronaut.context.env.PropertiesPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.env.yaml.YamlPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.event.ApplicationEventPublisherFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.core.async.publisher.Publishers"
    },
    {
        "name": "io.micronaut.data.document.model.query.builder.$MongoQueryBuilder$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.document.serde.IdDeserializer"
    },
    {
        "name": "io.micronaut.data.document.serde.IdPropertyNamingStrategy"
    },
    {
        "name": "io.micronaut.data.document.serde.IdSerializer"
    },
    {
        "name": "io.micronaut.data.intercept.$DataInterceptorResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.intercept.$DataIntroductionAdvice$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.$DefaultPage$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.$DefaultPageable$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.$DefaultSlice$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.$Pageable$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.naming.$NamingStrategies$KebabCase$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.naming.$NamingStrategies$LowerCase$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.naming.$NamingStrategies$Raw$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedLowerCase$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedUpperCase$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.naming.$NamingStrategies$UpperCase$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.query.builder.$AbstractSqlLikeQueryBuilder$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.query.builder.jpa.$JpaQueryBuilder$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.model.query.builder.sql.$SqlQueryBuilder$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.$MongoConvertersFactory$BsonValueAsObjectId0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.$MongoConvertersFactory$BsonValueAsString1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.$MongoConvertersFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.$MongoConvertersFactory$ObjectIdAsString2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.conf.$MongoAutomaticClassModelsDisabler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.conf.$MongoDataConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.conf.$MongoDataConfiguration$NotReactiveDriverSelectedCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.conf.$MongoDataConfiguration$NotSyncDriverSelectedCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.database.$MongoFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.database.$MongoFactory$NamedMongoDatabaseFactory1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.database.$MongoFactory$PrimaryMongoDatabaseFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$NamedMongoDatabaseFactory1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$PrimaryMongoDatabaseFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$SyncOperations2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.init.$AbstractMongoCollectionsCreator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.init.$MongoCollectionsCreator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.init.$MongoReactiveCollectionsCreator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.operations.$DefaultMongoRepositoryOperations$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.operations.$DefaultReactiveMongoRepositoryOperations$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.serde.$DataCodecRegistryBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.serde.$DataSerdeRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$MongoReactiveTransactionManagerFactory$BuildAsyncTransactionOperations3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$MongoReactiveTransactionManagerFactory$BuildPrimaryAsyncTransactionOperations2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$MongoReactiveTransactionManagerFactory$BuildPrimarySynchronousTransactionManager0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$MongoReactiveTransactionManagerFactory$BuildSynchronousTransactionManager1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$MongoReactiveTransactionManagerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$MongoSynchronousTransactionManager$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$SynchronousMongoTransactionManagerFactory$BuildAsyncTransactionOperations1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$SynchronousMongoTransactionManagerFactory$BuildPrimaryAsyncTransactionOperations0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$SynchronousMongoTransactionManagerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$TransactionalClientSession$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.mongodb.transaction.$TransactionalClientSessionInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.config.$DataConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.config.$DataConfiguration$PageableConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.convert.$DataConversionServiceFactory$Build0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.convert.$DataConversionServiceFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.criteria.$RuntimeCriteriaBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.criteria.metamodel.$StaticMetamodelInitializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.date.$CurrentDateTimeProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.event.$EntityEventRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.event.listeners.$AnnotatedMethodInvokingEntityEventListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.event.listeners.$AutoTimestampEntityEventListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.event.listeners.$UUIDGeneratingEntityEventListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.event.listeners.$VersionGeneratingEntityEventListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.http.$PageableRequestArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$AbstractQueryInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultCountInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultDeleteAllInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultDeleteOneInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultExistsByInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultFindAllInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultFindByIdInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultFindOneInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultFindOptionalInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultFindPageInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultFindSliceInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultFindStreamInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultSaveAllInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultSaveEntityInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultSaveOneInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultUpdateAllEntitiesInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultUpdateEntityInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.$DefaultUpdateInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$AbstractAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$AbstractConvertCompletionStageInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$AbstractCountConvertCompletionStageInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultCountAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultDeleteAllAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultDeleteOneAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultExistsByAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindAllAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindByIdAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindOneAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindPageAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindSliceAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultSaveAllAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultSaveEntityInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultSaveOneAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateAllAsyncEntitiesInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateEntityAsyncInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.$AbstractSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.$CountSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.$DeleteAllSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.$FindAllSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.$FindOneSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.$FindPageSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.$UpdateAllSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.async.$AbstractAsyncSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.async.$CountAsyncSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.async.$DeleteAllAsyncSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.async.$FindAllAsyncSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.async.$FindOneAsyncSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.async.$FindPageAsyncSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.async.$UpdateAllAsyncSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$AbstractReactiveSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$CountReactiveSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$DeleteAllReactiveSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindAllReactiveSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindOneReactiveSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindPageReactiveSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$UpdateAllReactiveSpecificationInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$AbstractCountOrEntityPublisherInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$AbstractPublisherInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$AbstractReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultCountReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteAllReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteOneReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultExistsByReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindAllReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindByIdReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindOneReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindPageReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindSliceReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveAllReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveEntityReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveOneReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateAllEntitiesReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateEntityReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateReactiveInterceptor$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.support.$DefaultRuntimeEntityRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.support.convert.$DefaultAttributeConverterRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.support.convert.convert.jpa.$JakartaAttributeConverterProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.data.runtime.support.convert.convert.jpa.$JxAttributeConverterProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.aws.$AmazonComputeInstanceMetadataResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.aws.$AmazonEC2InstanceMetadata$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.aws.$AmazonMetadataConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.$DefaultLocalFunctionRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.$DefaultDiagnosticInfoPopulator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.$DefaultLambdaContextFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.$AwsObjectMapperFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.$AwsObjectMapperFactory$ObjectMapper0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.$MicronautAwsProxyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.$MicronautLambdaHandler$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.model.bind.$AwsProxyPrincipalBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.model.bind.$AwsProxyRequestArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.model.bind.$AwsProxyRequestContextArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.model.bind.$ContextArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.model.factory.MicronautAwsProxyResponseFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.security.$MicronautLambdaAuthenticationFetcher$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.test.$AwsApiProxyTestServer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.test.$DefaultServletToAwsProxyRequestAdapter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.test.$DefaultServletToAwsProxyResponseAdapter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.proxy.test.$MockContextProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.function.aws.runtime.$AwsLambdaRuntimeApiError$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HealthStatus$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatTask$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.MediaTypeConvertersRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$DefaultHttpClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$DefaultLoadBalancerResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.filter.$DefaultHttpClientFilterResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.interceptor.$HttpClientIntroductionAdvice$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.loadbalance.$LoadBalancerConverters$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$HttpClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.ssl.$NettyClientSslBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.codec.$CodecConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.cookie.$SameSiteConverter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$GenericResource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$Resource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$VndError$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$NettyThreadFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$CoroutineHelper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$CorsConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$HttpLocaleResolutionConfigurationProperties$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$MultipartConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$RouteExecutor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.binding.$BasicAuthArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.binding.$LocaleArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.binding.$RequestArgumentSatisfier$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.codec.$TextStreamCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.context.$ServerRequestContextInstrumentation$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.cors.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.cors.$CorsFilter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.cors.$CorsOriginConverter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$ContentLengthExceededHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$ConversionErrorHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$DuplicateRouteHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$HttpStatusHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$JsonExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$URISyntaxHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$UnsatisfiedRouteHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.response.$HateoasErrorResponseProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.$DefaultHttpClientAddressResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.$DefaultHttpHostResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$CompositeHttpLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$CookieLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$HttpFixedLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$RequestLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.websocket.$ServerWebSocketProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.BeanProviderDefinition",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.JavaxProviderBeanDefinition"
    },
    {
        "name": "io.micronaut.jackson.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$JacksonConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.JsonPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ResourceModule$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.$JsonObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.codec.$JsonMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.convert.$JsonConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.$LogLevel$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.impl.$Log4jLoggingSystem$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactive.flow.converters.$FlowConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$ReactorInstrumenterFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.$ApplicationConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.$CompositeMessageSource$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.converters.reactive.$ReactiveTypeConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.$BsonBinaryMapper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.$BsonJsonMapper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$BsonRepresentationSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$BsonBinary4$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$BsonDbPointer5$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$BsonDecoder0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$BsonRegularExpression3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$BsonTimestamp6$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$Decimal1282$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.bson.custom.$CustomBsonSerdes$ObjectId1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.config.$DeserializationConfiguration$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.config.$SerdeConfiguration$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.config.$SerializationConfiguration$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef0",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef1",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef2",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef3",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$DefaultSerdeIntrospections$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$DefaultSerdeRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.bind.$SerdeJsonBeanPropertyBinderExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.config.$SerdeJsonConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$ArrayDequeDeserializer2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$ArrayListDeserializer1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$DefaultSetDeserializer5$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$HashSetDeserializer4$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$LinkedHashMapDeserializer8$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$LinkedHashSetDeserializer6$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$LinkedListDeserializer3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$OptionalDeserializer10$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$StringDeserializer0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$TreeMapDeserializer9$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$TreeSetDeserializer7$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$ObjectDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$DurationSerde1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$ObjectArraySerde0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$PeriodSerde2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$DateSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$EnumSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$EnumSetDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$HealthStatusSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$InstantSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$LocalDateSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$LocalDateTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$LocalTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$OffsetDateTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$SqlDateSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$SqlTimestampSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$YearSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$ZonedDateTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$BooleanSerializer3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$CharSequenceSerializer0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$CharSerializer2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$MapSerializer4$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$StringSerializer1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$IterableSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$ObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$OptionalMultiValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$OptionalSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$OptionalValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$StreamSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.condition.$TestActiveCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.support.server.$TestEmbeddedServer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.support.server.$TestExecutableEmbeddedServer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.interceptor.$CoroutineTxHelper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.interceptor.$TransactionalEventInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.interceptor.$TransactionalInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.jdbc.$DataSourceTransactionManager$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.jdbc.$DelegatingDataSourceResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.jdbc.$TransactionAwareDataSource$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.jdbc.$TransactionalConnection$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.jdbc.$TransactionalConnectionInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.test.$DefaultTestTransactionExecutionListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.test.$DefaultTestTransactionMethodInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.transaction.test.$SpockMethodTransactionDefinitionProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.$ValidatingInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.exceptions.$ConstraintExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.$DefaultClockProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.$DefaultValidator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.$DefaultValidatorConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.$DefaultValidatorFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.constraints.$EmailValidator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.constraints.$PatternValidator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.extractors.$DefaultValueExtractors$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.messages.$DefaultValidationMessages$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.validation.validator.resolver.$CompositeTraversableResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.$AnnotatedFilterRouteBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.$AnnotatedMethodRouteBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.$DefaultRouter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.naming.$ConfigurableUriNamingStrategy$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.naming.$HyphenatedUriNamingStrategy$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.resource.$StaticResourceConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Build0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$ConfigurationDefaultVersionProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$RouteVersionFilter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$RoutesVersioningConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$VersionAwareRouterListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$HeaderVersionResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$ParameterVersionResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.websocket.interceptor.$ClientWebSocketInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.netty.buffer.AbstractByteBufAllocator",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "jdk.internal.misc.Unsafe",
        "methods": [
            {
                "name": "getUnsafe",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "jdk.net.ExtendedSocketOptions",
        "fields": [
            {
                "name": "TCP_KEEPCOUNT"
            },
            {
                "name": "TCP_KEEPIDLE"
            },
            {
                "name": "TCP_KEEPINTERVAL"
            }
        ]
    },
    {
        "name": "org.bson.codecs.record.RecordCodecProvider"
    },
    {
        "name": "org.slf4j.Logger"
    },
    {
        "name": "org.testcontainers.containers.GenericContainer$$Lambda$465/0x0000000800eac9b0",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.testcontainers.dockerclient.DockerClientProviderStrategy$$Lambda$403/0x0000000800d82c68",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.testcontainers.shaded.com.fasterxml.jackson.databind.ext.Java7SupportImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.AbstrAsyncDockerCmd",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.AbstrDockerCmd",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.CreateContainerCmdImpl",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.ExecCreateCmdImpl",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getContainerId",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getEnv",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPrivileged",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getUser",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getWorkingDir",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.ExecStartCmdImpl",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.InfoCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.InpectNetworkCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.InspectContainerCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.InspectExecCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.KillContainerCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.ListContainersCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.ListImagesCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.PruneCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.RemoveContainerCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.StartContainerCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.VersionCmdImpl",
        "allDeclaredFields": true
    },
    {
        "name": "org.testcontainers.shaded.org.awaitility.core.ConditionFactory$1",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "reactor.core.publisher.Flux"
    },
    {
        "name": "reactor.core.publisher.Mono"
    },
    {
        "name": "sun.misc.Unsafe",
        "fields": [
            {
                "name": "theUnsafe"
            }
        ],
        "queriedMethods": [
            {
                "name": "copyMemory",
                "parameterTypes": [
                    "long",
                    "long",
                    "long"
                ]
            },
            {
                "name": "storeFence",
                "parameterTypes": [
                    
                ]
            }
        ],
        "methods": [
            {
                "name": "invokeCleaner",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.NativePRNG",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.NativePRNG$NonBlocking",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    }
]