dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-document-processor")
    implementation("io.micronaut.data:micronaut-data-mongodb")
    implementation("org.mongodb:mongodb-driver-sync")
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.13.3'
    implementation 'io.micronaut.aws:micronaut-aws-sdk-v2'
    implementation 'io.micronaut.aws:micronaut-function-aws'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'

    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mongodb")
    testImplementation("org.testcontainers:testcontainers")
}
micronaut {
    runtime("lambda_provided")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.car.*")
    }
}
tasks.named("dockerfileNative") {
    args(
            "-XX:MaximumHeapSizePercent=80",
            "-Dio.netty.allocator.numDirectArenas=0",
            "-Dio.netty.noPreferDirect=true"
    )
}
String projectNameLowerCase = project.name.toLowerCase()
tasks.named("dockerBuildNative") {
    images = ["$projectNameLowerCase:$project.version", "$projectNameLowerCase:latest"]
}
graalvmNative {
    binaries {
        main {
            imageName = "func"
        }
        test {
            agent {
                options.add("access-filter-file=${projectDir}/src/test/resources/access-filter.json")
            }
            buildArgs.add('--initialize-at-build-time=org.junit.platform.reporting.open.xml.OpenTestReportGeneratingListener')
        }
    }
}